angular.module("and-loader",[]).factory("andLoader",["$http",function(t){var o=1,s=function(t,s){this.id=o++,this.tasks=[],this.todo=[],this.parent=t||this,this.root=s||this,this.status,this.processed,this.status_watchers=[],this.root==this&&this.root.reset()};return s.prototype.reset=function(){this.processed=0,this.status={processed:0,loaded:0,failed:0,total:0}},s.prototype.load=function(){var t=new s(this,this.root);return this.tasks.push(t),t},s.prototype.end=function(){return this.parent},s.prototype.processTasks=function(t){for(var o in this.tasks){var s=this.tasks[o];s._run(t)}},s.prototype.run=function(t){return this.root.status_watchers.push(t),this._update(),this.root._run()},s.prototype._run=function(){var t=this;for(var o in t.todo){var s=t.todo[o];t._process(s)}return this},s.prototype._process=function(o){var s=this;if(o.cust)o.cust(function(t){s._handle(t,o,!1)},function(t){s._handle(t,o,!0)});else if(o.fn){var r=o.fn.then?o.fn:o.fn();r.then(function(t){s._handle(t,o,!1)},function(t){s._handle(t,o,!0)})}else t(o).then(function(t){s._handle(t,o,!1)},function(t){s._handle(t,o,!0)})},s.prototype._handle=function(t,o,s){var r=this;s?r.root.status.failed++:r.root.status.loaded++,r.root.status.processed++,++r.processed==r.todo.length&&r.processTasks(),this._update(),o.cb&&o.cb(t,!1)},s.prototype._update=function(){for(var t in this.root.status_watchers){var o=this.root.status_watchers[t];"function"==typeof o&&o(this.root.status)}},s.prototype.get=function(t,o){return this.todo.push({url:t,method:"GET",cb:o}),this.root.status.total++,this},s.prototype.post=function(t,o,s){return this.todo.push({url:t,method:"POST",data:o,cb:s}),this.root.status.total++,this},s.prototype.res=function(t,o){return this.todo.push({fn:t,cb:o}),this.root.status.total++,this},s.prototype.cust=function(t,o){return this.todo.push({cust:t,cb:o}),this.root.status.total++,this},s.prototype.then=function(){return this.parent.load()},s.prototype.watch=function(t){return this.root.status_watchers.push(t),this},function(){return new s}}]);